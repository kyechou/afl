diff -aur qemu-2.8.0.orig/cpu-exec.c qemu-2.8.0/cpu-exec.c
--- qemu-2.8.0.orig/cpu-exec.c	2016-12-21 04:16:44.000000000 +0800
+++ qemu-2.8.0/cpu-exec.c	2017-02-11 16:47:12.746666667 +0800
@@ -34,6 +34,8 @@
 #endif
 #include "sysemu/replay.h"
 
+#include "../patches/afl-qemu-cpu-inl.h"
+
 /* -icount align implementation. */
 
 typedef struct SyncClocks {
@@ -344,6 +346,7 @@
             if (!tb) {
                 /* if no translated code available, then translate it now */
                 tb = tb_gen_code(cpu, pc, cs_base, flags, 0);
+		AFL_QEMU_CPU_SNIPPET1;
             }
 
             mmap_unlock();
@@ -635,6 +638,7 @@
             for(;;) {
                 cpu_handle_interrupt(cpu, &last_tb);
                 tb = tb_find(cpu, last_tb, tb_exit);
+		AFL_QEMU_CPU_SNIPPET2;
                 cpu_loop_exec_tb(cpu, tb, &last_tb, &tb_exit, &sc);
                 /* Try to align the host and virtual clocks
                    if the guest is in advance */
diff -aur qemu-2.8.0.orig/linux-user/elfload.c qemu-2.8.0/linux-user/elfload.c
--- qemu-2.8.0.orig/linux-user/elfload.c	2016-12-21 04:16:48.000000000 +0800
+++ qemu-2.8.0/linux-user/elfload.c	2017-02-11 16:47:12.750000000 +0800
@@ -20,6 +20,8 @@
 
 #define ELF_OSABI   ELFOSABI_SYSV
 
+extern abi_ulong afl_entry_point, afl_start_code, afl_end_code;
+
 /* from personality.h */
 
 /*
@@ -1915,6 +1917,8 @@
     info->brk = 0;
     info->elf_flags = ehdr->e_flags;
 
+    if (!afl_entry_point) afl_entry_point = info->entry;
+
     for (i = 0; i < ehdr->e_phnum; i++) {
         struct elf_phdr *eppnt = phdr + i;
         if (eppnt->p_type == PT_LOAD) {
@@ -1948,9 +1952,11 @@
             if (elf_prot & PROT_EXEC) {
                 if (vaddr < info->start_code) {
                     info->start_code = vaddr;
+		    if (!afl_start_code) afl_start_code = vaddr;
                 }
                 if (vaddr_ef > info->end_code) {
                     info->end_code = vaddr_ef;
+		    if (!afl_end_code) afl_end_code = vaddr_ef;
                 }
             }
             if (elf_prot & PROT_WRITE) {
